{"version":3,"sources":["relax.gif","components/Line.js","components/Lines.js","components/Button.js","components/CancelContinueButtons.js","components/CurrentWord.js","components/Title.js","components/PoemBuilder.js","components/MiniPoem.js","components/History.js","components/NavBar.js","components/WordBank.js","components/SelfDestruct.js","components/Help.js","components/Game.js","index.js"],"names":["module","exports","Line","props","lineRef","useRef","useEffect","index","currentLine","current","focus","className","lineValid","ref","key","contentEditable","suppressContentEditableWarning","onChange","e","handleLineChange","onKeyDown","handleKeyDown","onClick","handleClick","placeholder","placeholderLine","value","line","syllableCount","syllableLimit","Lines","lines","placeholders","exampleHaiku","length","map","i","syllableCounts","syllableLimits","Button","buttonStyle","CancelContinueButtons","handleContinue","continueText","handleCancel","cancelText","CurrentWord","currentWord","currentWordExists","activeEditExists","activeEdit","syllables","text","onMouseEnter","viewOriginalWord","onMouseLeave","edited","displayOriginalWord","original","definition","handleCurrentWordReset","handleSyllableChange","disabled","displaySyllableUpdate","continueSyllableUpdate","cancelSyllableUpdate","handleDefinitionChange","displayDefinitionUpdate","continueDefinitionUpdate","cancelDefinitionUpdate","displayWordResetButton","handleResetClick","Title","title","handleTitleChange","target","currentPoemIndex","PoemBuilder","poem","linesEdit","valid","poemIsEmpty","reduce","entirePoemIsEmpty","handleSavePoem","handleResetPoem","criteria","autoresize","handleCurrentWordChange","console","log","MiniPoem","mapping","History","history","filter","id","currentPoem","JSON","stringify","isCurrentPoem","togglePoemHistory","NavBar","userName","buttons","selectedButton","displayHistory","item","name","toggleUser","WordBank","words","items","word","SelfDestruct","src","relax","alt","Help","url_base","Game","nextUser","state","users","find","user","setState","fetchWords","next","a","wordUrl","fetch","headers","then","response","json","fetchPoem","poemUrl","fetchMap","mapUrl","Map","addWordToMap","undefined","get","lookupWord","wordObject","updateMap","set","postMap","toggleView","view","activeView","views","newDisplay","display","getCurrentPoem","filteredHist","newTitle","newPoem","createPoem","postPoem","method","body","res","catch","err","handlePoemClick","lineNumber","window","getSelection","modify","cursorStart","selectionStart","cursorEnd","selectionEnd","sel","isCollapsed","toString","setSelectionRange","updateCurrentWord","handlePoemKeyDown","preventDefault","lineCount","handlePoemLineChange","slice","split","currentLines","createLines","getSyllableCount","validatePoem","Array","fill","edit","definitionUpdate","syllableUpdate","parseInt","handleStart","poemBuilder","nextArgs","url","renderViews","getView","push","incrementCounter","counter","count","num","fullTitle","type","viewStatus","originalWordWarning","continueUpdate","displayWarning","updateSyllables","updateDefinition","newSyllableCount","newDefinition","newWord","delete","cancelWarning","updateSyllableCounts","resetSyllables","resetDefinition","getSyllableCounts","total","targetWord","poemId","sanitizedHistory","filteredHistory","wordBank","Object","keys","help","selfDestruct","example","this","currentUser","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.782b7d5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/relax.8074cc44.gif\";","import React, { useRef, useEffect } from 'react'; \n\nconst Line = (props) => {\n\tconst lineRef = useRef(null);\n\tuseEffect(() => {\n\t\tif (props.index === props.currentLine) {\n\t\t\tlineRef.current.focus();\n\t\t}\n\t}, [props.index, props.currentLine]);\n\t\t\n\treturn (\n\t\t<span className={`line ${props.lineValid ? 'valid' : 'invalid'}`}>\n\t\t\t<textarea \n\t\t\tref={lineRef}\n\t\t\tkey={props.index} \n\t\t\tcontentEditable=\"true\" \n\t\t\tsuppressContentEditableWarning={true} //https://stackoverflow.com/questions/49639144/why-does-react-warn-against-an-contenteditable-component-having-children-managed\n\t\t\tonChange={(e) => props.handleLineChange(e, props.index)}\n\t\t\tonKeyDown={(e) => props.handleKeyDown(e, props.index)}\n\t\t\tonClick={(e) => props.handleClick(e, props.index)}\n\t\t\tplaceholder={props.placeholderLine}\n\t\t\tvalue={props.line ? props.line : \"\"}\n\t\t\t/>\n\t\t\t<h4 className=\"counter\"> {props.syllableCount} / {props.syllableLimit}</h4>\n\t\t</span>\n\t);\n};\n\nexport default Line; ","import React from 'react'; \nimport Line from './Line';\n\nconst Lines = (props) => { \n\tconst lines = props.lines; \n\tconst placeholders = {...props.exampleHaiku}; \n\t\t\t\n\treturn (\n\t\tlines && lines.length ? \n\t\t\tlines.map((line, i) => {\n\t\t\t\treturn (<Line \n\t\t\t\t\tclassName=\"line\"\n\t\t\t\t\tlineValid={props.syllableCounts[i] === props.syllableLimits[i] ? true : false}\n\t\t\t\t\tkey={i} \n\t\t\t\t\tline={line} \n\t\t\t\t\tplaceholderLine={placeholders[i]}\n\t\t\t\t\tcurrentLine={props.currentLine}\n\t\t\t\t\tsyllableLimit={props.syllableLimits[i]} \n\t\t\t\t\tsyllableCount={props.syllableCounts[i] ? props.syllableCounts[i]: 0}\n\t\t\t\t\tindex={i}\n\t\t\t\t\thandleKeyDown={props.handleKeyDown}\n\t\t\t\t\thandleClick={props.handleClick}\n\t\t\t\t\thandleLineChange={props.handleLineChange}\n\t\t\t\t/>);\n\t\t\t})\n\t\t: null\n\t);\n}\n\nexport default Lines; ","import React from 'react';\n\nconst Button = (props) => {\n\treturn <button onClick={props.handleClick} className={props.buttonStyle}>{props.value}</button>;\n};\n\nexport default Button; ","import React from 'react'; \nimport Button from './Button';\n\nconst CancelContinueButtons = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<Button handleClick={props.handleContinue} buttonStyle=\"continue\" value={props.continueText || \"Continue\"}/>\n\t\t\t<Button handleClick={props.handleCancel} buttonStyle=\"cancel\" value={props.cancelText || \"Cancel\"}/>\n\t\t</>\n\t);\n}\n\nexport default CancelContinueButtons; ","import React from 'react';\nimport Button from './Button';\nimport CancelContinueButtons from './CancelContinueButtons';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst CurrentWord = (props) => {\t\n\tconst { currentWord } = props;\t\n\tconst currentWordExists = (currentWord && 'text' in currentWord && 'syllables' in currentWord); \n\tconst activeEditExists = (currentWord && 'activeEdit' in currentWord && currentWord.activeEdit); \n\tif (!currentWordExists && !activeEditExists) { return null; }\n\tconst syllableCount = props.currentWord.syllables; \n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"currentWord\">\n\t\t\t\t<h1 className=\"currentWordDisplay\">\n\t\t\t\t{`${currentWordExists ? currentWord.text : ''}`}\n\t\t\t\t</h1>\n\t\t\t\t<span \n\t\t\t\t\tonMouseEnter={(e) => props.viewOriginalWord(true)}\n\t\t\t\t\tonMouseLeave={(e) => props.viewOriginalWord(false)}>\n\t\t\t\t{props.currentWord.edited ? \n\t\t\t\t\t\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclassName=\"asterisk\" \t\t\t\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t*\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t{props.displayOriginalWord ? \n\t\t\t\t\t<span className=\"originalWord\">\n\t\t\t\t\t\t<span> This word was edited (by you). Here is the original:</span>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<span>{currentWord.original ? currentWord.original.syllables : null} syllables</span>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<span>{currentWord.original ? currentWord.original.definition : null}</span>\n\t\t\t\t\t\t<Button value=\"Reset word to original\" handleClick={props.handleCurrentWordReset}></Button>\n\t\t\t\t\t</span>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t</span>\n\t\t\t\n\t\t\t<span className=\"currentWordSyllables\">\n\t\t\t\t<TextareaAutosize \n\t\t\t\t\tclassName=\"currentWordSyllableCount\" \n\t\t\t\t\tonChange={(e) => props.handleSyllableChange(e)}\n\t\t\t\t\tvalue={syllableCount}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<textarea \n\t\t\t\t\tclassName=\"currentWordSyllableText\" \n\t\t\t\t\tdisabled \n\t\t\t\t\tvalue={` syllable${(syllableCount > 1 || syllableCount === 0) ? \"s\" : \"\"}`}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t\t\n\t\t\t{props.displaySyllableUpdate ? \n\t\t\t<CancelContinueButtons \n\t\t\t\tcontinueText=\"Update syllable count\" \n\t\t\t\tcancelText=\"Cancel\" \n\t\t\t\thandleContinue={props.continueSyllableUpdate} \n\t\t\t\thandleCancel={props.cancelSyllableUpdate}\n\t\t\t/>\n\t\t\t: null}\n\t\t\t\t\n\t\t\t{currentWordExists && 'definition' in currentWord ? \n\t\t\t<TextareaAutosize \n\t\t\t\tclassName=\"currentDefinition autoresize\" \n\t\t\t\tvalue={currentWord.definition}\n\t\t\t\tonChange={(e) => {props.handleDefinitionChange(e)}}\n\t\t\t/> \n\t\t\t: null}\n\t\t\t\t\n\t\t\t{props.displayDefinitionUpdate ? \n\t\t\t<CancelContinueButtons\n\t\t\t\tcontinueText=\"Update definition\"\n\t\t\t\tcancelText=\"Cancel\"\n\t\t\t\thandleContinue={props.continueDefinitionUpdate}\n\t\t\t\thandleCancel={props.cancelDefinitionUpdate}\n\t\t\t/>\n\t\t\t: null}\n\t\t\t\n\t\t\t{props.displayWordResetButton ? \n\t\t\t<Button \n\t\t\t\thandleClick={props.handleResetClick} \n\t\t\t\tbuttonStyle=\"recycle\"\n\t\t\t\tvalue={`Reset syllable count & definition`}\n\t\t\t/>\n\t\t\t: null}\n\n\n\t\t\t</div>\n\t\t\t\n\t\t</>\n\t);\n};\n\nexport default CurrentWord; ","import React from 'react';\n\nconst Title = (props) => {\n\treturn (\n\t\t<div className=\"title\">\n\t\t\t<span><span className={'underline'}>title</span>\n\t\t\t:\n\t\t\t</span>\n\t\t\t<textarea \n\t\t\t\tclassName={'title'}\n\t\t\t\tvalue={props.title}\n\t\t\t\tonChange={(e) => props.handleTitleChange(e.target.value, props.currentPoemIndex)}\t\n\t\t\t\t/*cols={1}*/\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Title; ","import React from 'react'; \nimport Lines from './Lines';\nimport CurrentWord from './CurrentWord';\nimport Button from './Button';\nimport Title from './Title';\n\nconst PoemBuilder = (props) => {\n\tconst poem = props.poem; \n\tif (!poem) { return null; }\n\tconst lines = poem.linesEdit ? poem.linesEdit : poem.lines;\n\tif (!lines) { console.log(`lines: ${lines}`); return; }\n\tconst valid = poem.valid;\n\tconst poemIsEmpty = lines.reduce((entirePoemIsEmpty, currentLine) => {\n\t\treturn !currentLine && entirePoemIsEmpty;  \n\t}, true);\n\t\n\treturn (\n\t\t<>\n\t\t\t<div className=\"poem\">\n\t\t\t\t\n\t\t\t\t{poem ? \n\t\t\t\t\t<>\n\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Title\n\t\t\t\t\ttitle={poem ? poem.title : \"\"}\n\t\t\t\t\thandleTitleChange={props.handleTitleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t{ !poemIsEmpty ?   \t\t\t\t\t\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\thandleClick={props.handleSavePoem}\n\t\t\t\t\t\t\t\tvalue={\"Save & create new poem\"}/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\thandleClick={props.handleResetPoem}\n\t\t\t\t\t\t\t\tvalue={\"Reset\"}/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t: null }\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"lines\">\n\t\t\t\t\t\t<Lines\n\t\t\t\t\t\t\tlines={lines} \n\t\t\t\t\t\t\tsyllableLimits={props.criteria.syllableLimits}\n\t\t\t\t\t\t\tsyllableCounts={props.syllableCounts}\n\t\t\t\t\t\t\texampleHaiku={props.criteria.exampleHaiku}\n\t\t\t\t\t\t\tcurrentLine={props.currentLine}\n\t\t\t\t\t\t\thandleLineChange={props.handleLineChange}\n\t\t\t\t\t\t\thandleKeyDown={props.handleKeyDown}\n\t\t\t\t\t\t\thandleClick={props.handleClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<hr className=\"divider\"/>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t</>\n\t\t\t\t: null }\n\n\t\t\t\t\n\n\n\t\t\t</div>\n\t\t\t\n\t\t\t{poem && !props.poemIsEmpty ? \n\t\t\t\t<>\n\t\t\t\t\t{valid ? \n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>This haiku is valid!</h1>\n\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t: null}\n\t\t\t\t\t\n\t\t\t\t\t<CurrentWord \n\t\t\t\t\t\tcurrentWord={props.currentWord}\n\t\t\t\t\t\tdisplaySyllableUpdate={props.displaySyllableUpdate}\n\t\t\t\t\t\thandleSyllableChange={props.handleSyllableChange}\n\t\t\t\t\t\tcontinueSyllableUpdate={props.continueSyllableUpdate}\n\t\t\t\t\t\tcancelSyllableUpdate={props.cancelSyllableUpdate}\n\t\t\t\t\t\tautoresize={props.autoresize}\n\t\t\t\t\t\thandleResetClick={props.handleResetClick}\n\t\t\t\t\t\thandleCurrentWordChange={props.handleCurrentWordChange}\n\t\t\t\t\t\thandleDefinitionChange={props.handleDefinitionChange}\n\t\t\t\t\t\tcontinueDefinitionUpdate={props.continueDefinitionUpdate}\n\t\t\t\t\t\tcancelDefinitionUpdate={props.cancelDefinitionUpdate}\n\t\t\t\t\t\tdisplayDefinitionUpdate={props.displayDefinitionUpdate}\n\t\t\t\t\t\tviewOriginalWord={props.viewOriginalWord}\n\t\t\t\t\t\tdisplayOriginalWord={props.displayOriginalWord}\n\t\t\t\t\t\thandleCurrentWordReset={props.handleCurrentWordReset}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t\t\t\n\t\t\t: null}\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t</>\n\t)\n};\n\nexport default PoemBuilder; ","import React from 'react'; \n\nconst MiniPoem = (props) => {\n\t\n\tconst mapping = (props.lines ? (props.lines.length ? \n\t\t(props.lines.map((line, index) => {\n\t\t\treturn (\n\t\t\t\t<span key={index}>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{line}\n\t\t\t\t\t</span>\n\t\t\t\t\t<br/>\n\t\t\t\t</span>\n\t\t\t);\n\t\t})) : null) : null)\t\n\t\n\treturn (props.lines && props.lines.length > 0 ? \n\t<span onClick={props.handleClick}>\n\t\t{mapping}\n\t</span> \n\t: null);\n\t\t\n\t\n\t\n\t\n};\n\nexport default MiniPoem;","import React, { Fragment } from 'react'; \nimport MiniPoem from './MiniPoem';\n\nconst History = (props) => {\n\tif (!props.history || !props.history.length) {\n\t\treturn null;\n\t}\n\tconst poem = [...props.history].filter(poem => poem.id === props.currentPoem);\n\tconsole.log(`poem: ${JSON.stringify(poem)}`);\n\n\tconst valid = poem ? poem.valid : false;\n\n\tconst lines = poem.linesEdit ? {...poem.linesEdit} : poem.lines;\n\n\treturn (\n\t\t<div className=\"history\">\n\t\t\t\t{props.history.length ? \n\t\t\t\tprops.history.map((poem, index) => {\n\t\t\t\t\tconsole.log(`poem: ${JSON.stringify(poem)}`);\n\t\t\t\t\tlet isCurrentPoem = (poem.id === props.currentPoem);\t\t\t\t\t\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={index}>\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\tdisabled={isCurrentPoem}\n\t\t\t\t\t\t\t\t\tclassName=\"poemHistoryButton\" \n\t\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\t\tonClick={(e) => props.togglePoemHistory(poem.id)}>\n\t\t\t\t\t\t\t\t\t<h4><strong>{poem.title}</strong></h4>\n\t\t\t\t\t\t\t\t\t<br/>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<MiniPoem\n\t\t\t\t\t\t\t\t\t\tlines={poem.linesEdit ? poem.linesEdit : poem.lines} \n\t\t\t\t\t\t\t\t\t\tclassName=\"miniPoem\" \n\t\t\t\t\t\t\t\t\t\tindex={index}/>\n\t\t\t\t\t\t\t\t\t{isCurrentPoem ? <span>*<sub>active poem</sub></span> : null}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t}) \n\t\t\t\t: <div>No poems</div>}\n\t\t</div>\t\t\n\t);\n\t\t\n\t};\n\n\texport default History; ","import React from 'react'; \n\nconst NavBar = (props) => {\n\tconst { userName, buttons, selectedButton, displayHistory } = props; \n\n\treturn (\n\t\t<div className=\"nav\">\n\t\t\t\n\t\t\t{buttons.map((item, i) => {\n\t\t\t\treturn <button \n\t\t\t\t\tclassName={(item.name === selectedButton || (item.name === \"history\" && displayHistory)) ? \"selected\" : null} \n\t\t\t\t\tkey={i} \n\t\t\t\t\tonClick={() => props.handleClick(item.name)}>\n\t\t\t\t\t{item.name ===\"history\" && displayHistory ? 'Hide ': ''}{item.text}\n\t\t\t\t</button>\n\t\t\t})}\n\t\t\t{\n\t\t\t\t<button onClick={props.toggleUser}> by {userName} </button>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default NavBar;","import React from 'react'; \n\nconst WordBank = (props) => {\n\tlet words = props.words; \n\tif (!words) { words = []; }\n\tconsole.log(`WordBank words: ${JSON.stringify(props.words)}`);\n\tconst items = words.map((word, i) => {\n\t\tconsole.log(`word: ${JSON.stringify(word)}`);\n\t\tif (!word) { return; }\n\t\treturn ( \n\t\t\t<li>\n\t\t\t\t<span>\n\t\t\t\t\t<h2>{word.text}</h2>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t{word.syllables ? \n\t\t\t\t\t\t<p>{word.syllables} syllable{word.syllables > 1 ? \"s\" : null}</p>\n\t\t\t\t\t: <p> No syllable count </p>}\n\t\t\t\t\t<p>{word.definition}</p>\n\t\t\t\t</span>\n\t\t\t</li>\n\t\t);\n\t});\n\n\tconsole.log(`items: ${items}`); \n\n\treturn (\n\t\t<ul>\n\t\t\t{items}\n\t\t</ul>\n\t);\n};\n\nexport default WordBank; ","import React from 'react'; \nimport relax from '../relax.gif';\n\nconst SelfDestruct = () => {\n\treturn (\n\t\t<div className=\"relax\">\n\t\t<img src={relax} alt=\"Just a second... :)\"/>\n\n\t\t</div>\n\n\t);\n\n};\n\nexport default SelfDestruct; ","import React from 'react'; \n\nconst Help = () => {\n\treturn (\n\t\t<div className=\"help\">\n\t\t\t<h1>Help is coming soon...</h1>\n\t\t</div>\n\t);\n}; \n\nexport default Help; ","import React, {Fragment} from 'react';\nimport PoemBuilder from './PoemBuilder';\nimport History from './History';\nimport Button from './Button';\nimport NavBar from './NavBar';\nimport WordBank from './WordBank';\nimport SelfDestruct from './SelfDestruct';\nimport Help from './Help';\n\nconst production  = 'https://poem-builder.herokuapp.com';\nconst development = 'http://localhost:5000';\nconst url_base = (process.env.REACT_APP_ENVIRONMENT === 'development' ? development : production);\n\nconst user_id =\"a\";\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props); \n\n\t\tthis.state = {\n\t\t\tuser: {\"userName\": \"a\", \"name\": \"J\"},\n\t\t\tusers: [{\"userName\": \"a\", \"name\": \"J\"}, {\"userName\": \"b\", \"name\": \"D\"}],\n\t\t\tcounter: 0,\n\t\t\tcurrentLine: 0, \n\t\t\tcurrentPoem: null, \n\t\t\thistory: null, \n\t\t\tactiveView: \"poemBuilder\", \n\t\t\tviews: {\n\t\t\t\t\"poemBuilder\": {\n\t\t\t\t\t\"name\": \"poemBuilder\",\n\t\t\t\t\t\"text\": \"Current Build\"\n\t\t\t\t},\n\t\t\t\t\"wordBank\": {\n\t\t\t\t\t\"name\": \"wordBank\", \n\t\t\t\t\t\"text\": \"Word Bank\"\n\t\t\t\t},\n\t\t\t\t\"help\": {\n\t\t\t\t\t\"name\": \"help\", \n\t\t\t\t\t\"text\": \"Help\"\n\t\t\t\t}, \n\t\t\t\t\"selfDestruct\": {\n\t\t\t\t\t\"name\": \"selfDestruct\",\n\t\t\t\t\t\"text\": \"Self Destruct\"\n\t\t\t\t},\n\t\t\t\t\"history\": {\n\t\t\t\t\t\"name\": \"history\",\n\t\t\t\t\t\"text\": \"My Poems\"\n\t\t\t\t},\n\t\t\t},\n\t\t\tdisplay: {\n\t\t\t\t\"history\": false, \n\t\t\t\t\"syllableUpdate\": false,\n\t\t\t\t\"definitionUpdate\": false,\n\t\t\t\t\"originalWordWarning\": false,\n\t\t\t},\n\t\t\tcriteria: {\n\t\t\t\tlineCount: 3,\n\t\t\t\tsyllableLimits: [5,7,5],\n\t\t\t\texample: [\"haikus are easy\", \"but sometimes they don't make sense\", \"refrigerator\"],\n\t\t\t},\n\t\t\tmap: new Map(), \n\t\t\tcurrentWord: null,\n\t\t\tsyllableCounts: [0,0,0],\n\t\t};\n\n\n\t};\n\n\ttoggleUser = () => {\n\t\tconst nextUser = this.state.users.find(user => user.userName != this.state.user.userName); \n\t\tthis.setState({user: nextUser});\n\t};\n\n\tcomponentWillMount() {\n\t\tconst user = this.state.user;\n\t\tif (!user) { console.log(`no current user found, returning`); return; }\t\n\t\tthis.setState({user: user});\n\t\t\n\t\tthis.fetchPoem(user, (history) => {console.log(`fetched history: ${JSON.stringify(history)}`); this.setState({history: history, counter: history.length, currentPoem: history[0] ? history[0].id : null})});\n\t\t\n\t\tthis.fetchWords((words) => {this.setState({map: new Map(words)}); console.log(`map loaded`);}); \n\n\t\t/*\n\t\tthis.fetchMap(user, (map) => {\n\t\t\tif (!map || !map.length) {\n\t\t\t\tmap = new Map();\n\t\t\t}\n\t\t\tthis.setState({map: map});\n\t\t});\n\t\t*/\n\t};\n\n\tfetchWords = async (next) => {\n\t\tconsole.log(`fetchWords`); \n\t\tconst wordUrl = `${url_base}/wordAPI/`; \n\t\tconst response = await fetch(wordUrl, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json',\n\t\t\t}\n\t\t}).then(response => response.json())\n\t\t.then(response => next(response));\n\t};\n\n\tfetchPoem = async (user, next) => {\n\t  if (!user) { return; }\n\t\tconst poemUrl = `${url_base}/wordAPI/poem/${user.userName}`;\n\t\tconst response = await fetch(poemUrl, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json',\n\t\t\t}\n\t\t}).then((response) => response.json())\n\t\t.then((response) => {\n\t\t\tnext(response);\n\t\t});\n\t};\n\n\tfetchMap = async (user, next) => {\n\t\tif (!user) { return; }\n\t\tconst mapUrl = `${url_base}/wordAPI/map/${user.userName}`;\n\t\tconst response = await fetch(mapUrl, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json',\n\t\t\t}\n\t\t}).then((response) => response.json())\n\t\t.then((response) => {\n\t\t\tif (!response) { next(new Map()); }\n\t\t\tnext(response); \n\t\t});\n\t};\n\n\taddWordToMap = (word, next) => {\n\t\tconst map = new Map(this.state.map);\n\t\tif (map.get(word) !== undefined) {\n\t\t\tnext(map.get(word)); // use cached word\n\t\t} else {\n\t\t\t// lookup word\n\t\t\tthis.lookupWord(word, (wordObject) => { \n\t\t\t\tthis.updateMap(word, wordObject);  \n\t\t\t\tnext(wordObject); \n\t\t\t});\n\t\t}\t\t\n\t};\n\n\tupdateMap = (word, wordObject) => {\n\t\tconsole.log(`updateMap`); \n\t\tconsole.log(`this.state.map: ${JSON.stringify(this.state.map)}`);\n\t\tthis.setState({map: this.state.map.set(word, wordObject)}, this.postMap(this.state.map));\n\t};\n\n\ttoggleView = (view=\"\") => {\n\t\tif (!view || view === this.state.activeView || !(view in this.state.views) ) {\n\t\t\treturn; \n\t\t}\n\t\t// toggle history on/off\n\t\tif (view === this.state.views.history.name) {\n\t\t\tconst newDisplay = {...this.state.display, history: !this.state.display.history};\n\t\t\tthis.setState({display: newDisplay});\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({activeView: view}); \n\t};\n\n\tgetCurrentPoem = () => {\n\t\tconst filteredHist = this.state.history.filter(poem => poem); \n\t\tif (!filteredHist) { return null; }\n\t\treturn filteredHist.find(poem => {\n\t\t\treturn poem.id === this.state.currentPoem;\n\t\t}); \n\t};\n\n\thandleTitleChange = (newTitle) => {\n\t\tthis.setState({history: this.state.history.map((poem, index) => {\n\t\t\tif (poem.id === this.state.currentPoem) {\n\t\t\t\treturn {...poem, title: newTitle}\n\t\t\t} else {\n\t\t\t\treturn poem; \n\t\t\t}\n\t\t})});\n\t};\n\n\thandleResetPoem = () => {\n\t\tconst history = this.state.history.map((item, i) => {\n\t\t\tif (item.id === this.state.currentPoem) {\n\t\t\t\titem.linesEdit = item.lines; \n\t\t\t}\n\t\t\treturn item;  \n\t\t});\n\n\t\tthis.setState({ history: history });\n\t};\n\n\thandleSavePoem = () => {\n\t\tconst poem = this.getCurrentPoem(); \n\t\tif (!poem || !poem.lines){ return; }\n\t\t\n\t\t// replaces `lines` with `linesEdit`\n\t\tconst history = [...this.state.history].map((poem, i) => {\n\t\t\tif (!poem) { return poem; }\n\t\t\tif (poem.id === this.state.currentPoem) {\n\t\t\t\tpoem.lines = poem.linesEdit; \n\t\t\t\treturn poem;\n\t\t\t} else {\n\t\t\t\treturn poem;\n\t\t\t}\n\t\t});\n\n\t\tconst newPoem = this.createPoem(); \n\n\t\tthis.setState({ \n\t\t\thistory: [...history, newPoem],\n\t\t\tcurrentPoem: newPoem.id,\n\t\t});\n\n\t\tthis.postPoem(poem);\n\t\t//this.postMap(this.state.map); \n\t};\t\n\n\tpostPoem = (poem) => {\n\t\tif (!poem ) { return poem; }\n\t\tvar poemUrl = `${url_base}/wordAPI/poem`;\t\t\n\t\tvar headers = {'Content-Type': 'application/json'};\n\t\tfetch(poemUrl, {\n\t\t\tmethod: 'post', \n\t\t\tbody: JSON.stringify(poem),\n\t\t\theaders: headers,\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(`poem posted: ${JSON.stringify(res)}`);\n\t\t\t\tconsole.log(`map: ${JSON.stringify(this.state.map)}`);\n\t\t\t\tthis.postMap(this.state.map);\n\t\t\t})\n\t\t\t.catch(err => err);\n\t};\n\n\tpostMap = (map) => {\n\t\tif (!map) { return map; };\n\t\tconsole.log(`postMap, map: ${JSON.stringify(map)}`);\n\t\tvar mapUrl = `${url_base}/wordAPI/map`;\n\t\tvar headers = {'Content-Type': 'application/json'}; \n\t\tvar body = {\n\t\t\tuser: this.state.user.userName, \n\t\t\tmap: map,\n\t\t}\n\t\tfetch(mapUrl, {\n\t\t\tmethod: 'post', \n\t\t\tbody: JSON.stringify(body),\n\t\t\theaders: headers,\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => console.log(`map posted: ${JSON.stringify(res)}`))\n\t\t\t.catch(err => err); \n\t};\n\n\thandlePoemClick = (e, lineNumber) => {\n\t\t// https://stackoverflow.com/questions/7563169/detect-which-word-has-been-clicked-on-within-a-text\n\t\tvar word = '';\n\t\tlet selection = window.getSelection().modify;\n\t\tif (selection && window.getSelection) {\n\t\t\t\t\t\t\n\t\t\t// save original cursor position\n\t\t\t// http://dimafeldman.com/js/maintain-cursor-position-after-changing-an-input-value-programatically/\n\t\t\tvar cursorStart = e.target.selectionStart,\n\t\t\t\tcursorEnd = e.target.selectionEnd;\n\t\t\t\n\t\t\tvar sel = window.getSelection();\n\t\t\tif (sel.isCollapsed) {\n\t\t\t\tsel.modify('move', 'forward', 'character');\n\t\t\t\tsel.modify('move', 'backward', 'word');\n\t\t\t\tsel.modify('extend', 'forward', 'word');\n\t\t\t\tword = sel.toString();\n\t\t\t\tsel.modify('move', 'forward', 'character'); // clear selection\n\t\t\t} else {\n\t\t\t\tword = sel.toString();\n\t\t\t}\n\t\t\t\n\t\t\t// restore cursor position\n\t\t\te.target.setSelectionRange(cursorStart, cursorEnd);\n\t\t}\n\t\t\n\t\tconst map = this.state.map ? this.state.map : new Map(); \n\t\tconst currentWord = map.get(word);\n\t\tif (currentWord === null){\n\t\t\tthis.updateCurrentWord(word);\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tcurrentWord: {...currentWord, edited:false},\n\t\t\t});\n\t\t}\n\t\t\n\t\tthis.setState({currentLine: lineNumber});\n\t};\n\n\thandlePoemKeyDown = (e) => {\n\t\tlet currentLine; \n\t\tswitch(e.key) {\n\t\t\tcase 'Enter':\n\t\t\t\te.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowDown': \n\t\t\t\te.preventDefault(); \n\t\t\t\tcurrentLine = {...this.state.currentLine};\n\t\t\t\tif (++currentLine < this.state.lineCount) {\n\t\t\t\t\tthis.setState({ currentLine: currentLine });\n\t\t\t\t}\n\t\t\t\tbreak; \n\t\t\tcase 'ArrowUp': \n\t\t\t\te.preventDefault();\n\t\t\t\tcurrentLine = {...this.state.currentLine}; \n\t\t\t\tif (--currentLine >= 0) {\n\t\t\t\t\tthis.setState({ currentLine: currentLine });\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t};\n\n\thandlePoemLineChange = (e, lineNumber) => {\t\t\n\t\t// save original cursor position\n\t\tvar cursorStart = e.target.selectionStart,\n\t\t\tcursorEnd = e.target.selectionEnd;\t\t\n\t\t\n\t\tlet line = e.target.value;\n\n\t\t// line from start up to current cursor position\n\t\tvar leftOfCursor = e.target.value.slice(0,e.target.selectionEnd);\n\t\tvar words = leftOfCursor.split(\" \");\n\t\tvar currentWord = words[words.length-1];\n\n\t\tthis.updateCurrentWord(currentWord); // this is completing execution AFTER history has already been calculated\n\t\t\n\t\tlet lines;\n\t\tconst currentPoem = this.getCurrentPoem(); \n\t\tlet syllableCounts; \n\t\tconst history = this.state.history.map((poem, index) => {\n\t\t\tif (!poem) { return poem; }\n\t\t\tif (poem.id === this.state.currentPoem) {\n\t\t\t\tlet currentLines = [...poem.linesEdit];\n\t\t\t\tif (!currentLines) { currentLines = this.createLines()}\n\t\t\t\tcurrentLines[lineNumber] = line;\n\t\t\t\tlines = currentLines; \n\t\t\t\tsyllableCounts = lines.map(line => this.getSyllableCount(line));\n\t\t\t\treturn {...poem, linesEdit: currentLines};\n\t\t\t}\n\t\t});\n\t\tconsole.log(`handlePoemLineChange: syllableCounts: ${syllableCounts}`); \t\t\n\t\tthis.setState({ history: history, syllableCounts: syllableCounts });\n\n\t\tthis.validatePoem(this.getCurrentPoem());\t\t\n\t\t\t\t\n\t\t// restore cursor position\n\t\te.target.setSelectionRange(cursorStart, cursorEnd); \n\t};\n\n\tcreateLines = (length=this.state.criteria.lineCount) => {\n\t\treturn new Array(length).fill(\"\"); \n\t}\n\n\thandlePoemClick = (e, lineNumber) => {\t\t\t\n\t\t// https://stackoverflow.com/questions/7563169/detect-which-word-has-been-clicked-on-within-a-text\n\t\tvar word = '';\n\t\tlet selection = window.getSelection().modify;\n\t\tif (selection && window.getSelection) {\n\t\t\t\t\t\t\n\t\t\t// save original cursor position\n\t\t\t// http://dimafeldman.com/js/maintain-cursor-position-after-changing-an-input-value-programatically/\n\t\t\tvar cursorStart = e.target.selectionStart,\n\t\t\t\tcursorEnd = e.target.selectionEnd;\n\t\t\t\n\t\t\tvar sel = window.getSelection();\n\t\t\tif (sel.isCollapsed) {\n\t\t\t\tsel.modify('move', 'forward', 'character');\n\t\t\t\tsel.modify('move', 'backward', 'word');\n\t\t\t\tsel.modify('extend', 'forward', 'word');\n\t\t\t\tword = sel.toString();\n\t\t\t\tsel.modify('move', 'forward', 'character'); // clear selection\n\t\t\t} else {\n\t\t\t\tword = sel.toString();\n\t\t\t}\n\t\t\t\n\t\t\t// restore cursor position\n\t\t\te.target.setSelectionRange(cursorStart, cursorEnd);\n\t\t}\n\t\t\n\t\tconst map = new Map(this.state.map); \n\t\tconst currentWord = map.get(word);\n\t\tif (currentWord === undefined){\n\t\t\tthis.updateCurrentWord(word);\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tcurrentWord: {...currentWord, edited:false},\n\t\t\t});\n\t\t}\n\t\t\n\t\tthis.setState({currentLine: lineNumber});\n\t};\n\n\thandleDefinitionChange = (e) => {\n\t\tif (e.target.value && e.target.value !== this.state.currentWord.activeEdit.edit.definition) {\n\t\t\tthis.setState({display: {...this.state.display, definitionUpdate: true}});\n\t\t} else {\n\t\t\tthis.setState({display: {...this.state.display, definitionUpdate: false}});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcurrentWord: {\n\t\t\t\t...this.state.currentWord, \n\t\t\t\tactiveEdit: {...this.state.currentWord.activeEdit, \n\t\t\t\t\tdefinition: true, \n\t\t\t\t\tedit: {...this.state.currentWord.activeEdit.edit, definition: e.target.value}}\n\t\t\t}\n\t\t});\n\t};\n\n\thandleSyllableChange = (e) => {\n\t\tif (e.target.value && e.target.value !== this.state.currentWord.syllables) {\n\t\t\tthis.setState({display: {...this.state.display, syllableUpdate: true}});\n\t\t} else {\n\t\t\tthis.setState({display: {...this.state.display, syllableUpdate: false}});\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\tcurrentWord: {\n\t\t\t\t...this.state.currentWord, \n\t\t\t\tactiveEdit: {...this.state.currentWord.activeEdit, \n\t\t\t\t\tsyllables: true, \n\t\t\t\t\tedit: {...this.state.currentWord.activeEdit.edit, syllables: (e.target.value ? parseInt(e.target.value) : '')}\n\t\t\t\t}\n\t\t\t}\n\t\t});\t\t\n\t};\n\n\thandleStart = () => {\n\t\tconst newPoem = {...this.createPoem()}; \n\t\tif (this.state.history && this.state.history.length) { return; }\n\t\tconst history = [ newPoem ];\t \n\t\tthis.setState({ \n\t\t\thistory: history,\n\t\t\tcurrentPoem: newPoem.id,\n\t\t\tactiveView: this.state.views.poemBuilder.name\n\t\t});\n\t};\n\n\tlookupWord = (text, next, ...nextArgs) => {\n\t\tif (!text && !next) { console.log(`lookupWord --> word: ${text}`); return null; }\n\t\tvar url = `${url_base}/wordAPI/${text}`;\n\t\tfetch(url)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tconst word = {\n\t\t\t\t\ttext: text,\n\t\t\t\t\tdefinition: res.definition,\n\t\t\t\t\tsyllables: res.syllables,\n\t\t\t\t\tedited: res.edited,\n\t\t\t\t\tactiveEdit: {\n\t\t\t\t\t\tedit: res,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnext(word, nextArgs);\n\t\t\t})\n\t\t\t.catch(err => err);\n\t};\n\n\trenderViews = () => {\n\t\tlet views = [(this.state.display.history ? this.getView(this.state.views.history.name) : null)];\n\t\tviews.push(this.getView(this.state.activeView)); \n\t\treturn views; \n\t};\n\n\tincrementCounter = () => {\n\t\t\n\t\tthis.setState({counter: this.state.counter+1});\n\t};\n\n\tcreatePoem = (count=null, title='Haiku') => {\n\t\tconst num = count ? count : this.state.counter;\n\t\tthis.incrementCounter();\n\t\tconst fullTitle = `${title} ${num}`;\n\t\tconst user = this.state.user; \n\t\tlet newPoem = {\n\t\t\tuser: user ? user.userName : '',\n\t\t\tid: `${user ? user.userName : ''}_${num}`, \n\t\t\ttitle: fullTitle,\n\t\t\tlines: this.createLines(),\n\t\t\tlinesEdit: this.createLines(),\n\t\t\tlineCount: 3,\n\t\t\ttype: \"haiku\",\n\t\t\tvalid: false,\n\t\t};\n\t\treturn newPoem;\n\t};\n\n\tviewOriginalWord = (viewStatus) => {\n\t\tthis.setState({ display: {...this.state.display, originalWordWarning: viewStatus}});\n\t};\n\n\tcontinueUpdate = (displayWarning, updateSyllables=true, updateDefinition=true) => {\n\t\tif (!this.state.currentWord || !this.state.currentWord.activeEdit) { return; }\n\t\t\n\t\tconst currentWord = {...this.state.currentWord};\n\t\t\n\t\tconst newSyllableCount = (updateSyllables ? this.state.currentWord.activeEdit.edit.syllables : currentWord.syllables);\n\t\tconst newDefinition = (updateDefinition ? this.state.currentWord.activeEdit.edit.definition : currentWord.definition); \n\t\t\n\t\tconst newWord = {...currentWord, syllables: newSyllableCount, definition: newDefinition, original:{...currentWord}, edited: true, activeEdit: {...currentWord}};\n\t\tconst map = new Map(this.state.map);\n\t\tmap.delete(currentWord.text);\n\t\tmap.set(currentWord.text, newWord);\n\n\t\tlet valid;\n\t\tlet currentPoem;  \n\t\tconst history = this.state.history.map((poem, i) => {\n\t\t\tif (poem.id === this.state.currentPoem){\n\t\t\t\tcurrentPoem = this.getCurrentPoem(); \n\t\t\t\tvalid = this.validatePoem(poem.linesEdit);\n\t\t\t\treturn {...currentPoem, valid: valid}\n\t\t\t} else { \n\t\t\t\tcurrentPoem = poem;\n\t\t\t\treturn currentPoem;  \n\t\t\t}; \n\t\t});\n\n\t\tif (updateSyllables) {\n\t\t\tthis.cancelWarning(this.state.display.syllableUpdate, true, false); \n\t\t}\n\n\t\tif (updateDefinition) {\n\t\t\tthis.cancelWarning(this.state.display.definitionUpdate, false, true);\n\t\t}\n\n\t\tthis.updateSyllableCounts(currentPoem.linesEdit);\n\t\t\n\t\tthis.setState({\n\t\t\tmap: map,\n\t\t\tdisplaySyllableUpdate: false,\n\t\t\tcurrentWord: newWord,\n\t\t\thistory: history,\n\t\t});\n\t};\n\n\tcancelWarning = (displayWarning, resetSyllables=true, resetDefinition=true) => {\n\t\tif (this.state.currentWord && this.state.currentWord.activeEdit) {\n\t\t\tthis.updateCurrentWord(null, resetSyllables, resetDefinition);\n\t\t}\n\t\tthis.setState({displayWarning: false});\n\t};\n\n\t// If newWord=`null`, refresh currentWord by querying the db and overwriting local changes to syllable/definition. \n\t// Else, replace currentWord with the lookup results for newWord. \n\tupdateCurrentWord = (newWord=null, resetSyllables=true, resetDefinition=true) => {\n\t\tconst currentWord = {...this.state.currentWord};\n\n\t\tif (!currentWord && !newWord) { return; }\n\t\tif (!newWord) { \n\t\t\tnewWord = currentWord;\n\t\t} \n\t\tthis.addWordToMap(newWord, (wordObject) => {\n\t\t\tconst poem = this.getCurrentPoem(); \n\t\t\tconst lines = poem.linesEdit ? poem.linesEdit : poem.lines;\n\t\t\tconst syllableCounts = lines.map(line => this.getSyllableCount(line));\n\t\t\tthis.setState({\n\t\t\t\t\tcurrentWord: {...wordObject, \n\t\t\t\t\t\tactiveEdit: {\n\t\t\t\t\t\t\tsyllables: false,\n\t\t\t\t\t\t\tdefinition: false, \n\t\t\t\t\t\t\tedit: {...wordObject}\n\t\t\t\t\t\t}, \n\t\t\t\t\t\tsyllableCounts: syllableCounts}});\t\t\t\t\t\n\t\t}); \n\t};\n\n\tvalidatePoem = (poem) => {\n\t\tif (!poem) { return; }\n\t\tconst lines = poem.lines; \n\t\tif (!lines) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tif (this.state.syllableCounts[i] !== this.state.criteria.syllableLimits[i]) {\n\t\t\t\tthis.setState({valid: false});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tthis.setState({valid:true});\n\t\treturn true; \n\t};\n\n\tupdateSyllableCounts = (lines) => {\n\t\tconst syllableCounts = this.getSyllableCounts(lines); \n\t\tthis.setState({syllableCounts: syllableCounts});\n\t};\n\n\tgetSyllableCounts = (lines) => {\n\t\tconsole.log(`getSyllableCounts: map: ${JSON.stringify(this.state.map)}`); \n\t\tconst syllableCounts = lines.map(line => {\n\t\t\tif (!line) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tconst map = new Map(this.state.map);\t\t\t\n\t\t\treturn line.split(\" \").reduce((total, word) => {\n\t\t\t\tif (!map || !map.length) { return; }\n\t\t\t\tconst targetWord = map.get(word);\n\t\t\t\tif (!targetWord || !('syllables' in targetWord) || targetWord.syllables === undefined) { return total + 0; }\t\n\t\t\t\treturn total + targetWord.syllables;\n\t\t\t}, 0); \n\t\t}, this);\n\t\treturn syllableCounts; \n\t};\n\n\tgetSyllableCount = (line) => {\n\t\tif (!line) { return; }\n\t\treturn line.split(\" \").reduce((total, word) => {\n\t\t\t\tconst map = new Map(this.state.map); \n\t\t\t\tif (!map || !map.length) { return; }\n\t\t\t\tconst targetWord = map.get(word);\n\t\t\t\tif (!targetWord || !('syllables' in targetWord) || targetWord.syllables === undefined) { return total + 0; }\t\n\t\t\t\treturn total + targetWord.syllables;\n\t\t}, 0);\n\t};\n\n\ttogglePoemHistory = (poemId) => {\n\t\t//if (poemId === this.state.currentPoem) { return; }\n\t\t//const currentPoem = this.getCurrentPoem();\n\t\t//if (!currentPoem) { return null; }\n\t\tthis.setState({\n\t\t\tcurrentPoem: poemId,\n\t\t});\n\t};\n\n\tgetView = (view=\"\") => {\n\t\tif (!view || !(view in this.state.views)) {\n\t\t\treturn; \n\t\t}\n\n\t\tconst views = {...this.state.views};\n\t\tconst poem = this.getCurrentPoem();\n\t\tif (!poem) { console.log(`poem: ${JSON.stringify(poem)}, returning`); return; };\n\t\tlet lines = poem.linesEdit ? poem.linesEdit : poem.lines;\n\t\tif (!lines) { lines = this.createLines()} \n\n\t\tconst currentWord = this.state.currentWord ? (this.state.currentWord.activeEdit ? this.state.currentWord.activeEdit.edit : null) : null; \n\t\t\n\t\tconst user = this.state.user; \n\t\tconst sanitizedHistory = this.state.history.filter(poem => poem); \n\t\tconst filteredHistory = sanitizedHistory ? (sanitizedHistory.filter((poem) => poem.user === (user ? user.userName : ''))) : null;\n\n\t\tconst syllableCounts = this.getSyllableCounts(lines); \n\t\tconsole.log(`getView: syllableCounts: ${syllableCounts}, lines: ${lines}`); \n\n\t\tswitch(view) {\n\t\t\tcase views.poemBuilder.name:\n\t\t\t\treturn (<PoemBuilder\n\t\t\t\t\tpoem={poem}\n\t\t\t\t\tsyllableCounts={syllableCounts}\n\t\t\t\t\tmap={this.state.map}\n\t\t\t\t\tcriteria={this.state.criteria}\n\t\t\t\t\thandleKeyDown={this.handlePoemKeyDown}\n\t\t\t\t\thandleClick={this.handlePoemClick}\n\t\t\t\t\thandleLineChange={this.handlePoemLineChange}\n\t\t\t\t\tcurrentLine={this.state.currentLine}\n\t\t\t\t\thandleSavePoem={this.handleSavePoem}\n\t\t\t\t\thandleTitleChange={this.handleTitleChange}\n\t\t\t\t\thandleDefinitionChange={this.handleDefinitionChange}\n\t\t\t\t\thandleSyllableChange={this.handleSyllableChange}\n\t\t\t\t\thandleResetPoem={this.handleResetPoem}\n\t\t\t\t\tcurrentWord={currentWord}\n\t\t\t\t\tdisplayDefinitionUpdate={this.state.display.definitionUpdate}\n\t\t\t\t\tdisplaySyllableUpdate={this.state.display.syllableUpdate}\n\t\t\t\t\tcontinueDefinitionUpdate={() => this.continueUpdate(this.state.display.definitionUpdate, false, true)}\n\t\t\t\t\tcontinueSyllableUpdate={() => this.continueUpdate(this.state.display.syllableUpdate, true, false)}\n\t\t\t\t\tcancelDefinitionUpdate={() => this.cancelWarning(this.state.display.definitionUpdate, false, true)}\n\t\t\t\t\tcancelSyllableUpdate={() => this.cancelWarning(this.state.display.syllableUpdate, true, false)}\n\t\t\t\t\tviewOriginalWord={this.viewOriginalWord}\n\t\t\t\t\tdisplayOriginalWord={this.state.display.originalWordWarning}\n\t\t\t\t/>); \n\t\t\t\tbreak; \n\t\t\tcase views.wordBank.name: \n\t\t\t\tconst map = new Map(this.state.map); \n\t\t\t\tconst words = Object.keys(this.state.map).map(item => map.get(item));\n\t\t\t\treturn <WordBank words={words} />;\n\t\t\t\tbreak;\n\t\t\tcase views.help.name: \n\t\t\t\treturn <Help />;\n\t\t\t\tbreak; \n\t\t\tcase views.selfDestruct.name: \n\t\t\t\treturn <SelfDestruct />; // \"relax... screen, game, photo, gif, etc\" \n\t\t\t\tbreak;  \n\t\t\tcase views.history.name:\n\t\t\t\treturn <History \n\t\t\t\t\thistory={filteredHistory} \n\t\t\t\t\tcurrentPoem={this.state.currentPoem} \n\t\t\t\t\ttogglePoemHistory={this.togglePoemHistory}\n\t\t\t\t/>;\n\t\t\t\tbreak; \n\t\t}\n\t};\n\n\trender() {\t\n\t\tconst buttons = Object.keys(this.state.views).map(item => {\n\t\t\treturn {\n\t\t\t\t\"name\": item,\n\t\t\t\t\"text\": this.state.views[item].text\n\t\t\t};\n\t\t});\n\n\t\tconst currentUser = this.state.user;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\n\t\t\t{this.state.activeView && this.state.history && this.state.history.length?\n\t\t\t\t<Fragment>\n\t\t\t\t\t<NavBar\n\t\t\t\t\t\tuserName={currentUser ? currentUser.name : \"?\"}\n\t\t\t\t\t\tbuttons={buttons}\n\t\t\t\t\t\tselectedButton={this.state.activeView}\n\t\t\t\t\t\tdisplayHistory={this.state.display.history}\n\t\t\t\t\t\thandleClick={this.toggleView}\n\t\t\t\t\t\ttoggleUser={this.toggleUser}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.renderViews(this.state.activeView)}\n\t\t\t\t</Fragment>\n\t\t\t\t:\n\t\t\t\t<Button \n\t\t\t\t\tbuttonStyle=\"startButton\"\n\t\t\t\t\thandleClick={this.handleStart}\n\t\t\t\t\tvalue=\"Build!\"\n\t\t\t\t/>\n\t\t\t}\n\t\t\t\n\t\t\t</Fragment>\n\t\t);\n\t};\t\n};\n\nexport default Game; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './components/Game';\n\n// ========================================\n\nReactDOM.render(\n\t<Game/>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}