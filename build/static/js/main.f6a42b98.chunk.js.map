{"version":3,"sources":["components/Line.js","components/Lines.js","components/Button.js","components/CancelContinueButtons.js","components/CurrentWord.js","components/Title.js","components/PoemBuilder.js","components/MiniPoem.js","components/History.js","components/NavBar.js","components/Game.js","index.js"],"names":["Line","props","lineRef","useRef","useEffect","index","currentLine","current","focus","className","lineValid","ref","key","contentEditable","suppressContentEditableWarning","onChange","e","handleLineChange","onKeyDown","handleKeyDown","onClick","handleClick","onInput","autoresize","placeholder","placeholderLine","value","line","onMouseOver","handleMouseover","onMouseOut","handleMouseOut","syllableCount","syllableLimit","Lines","lines","placeholders","exampleHaiku","length","map","i","syllableCounts","syllableLimits","handlePlaceholderMouseover","handlePlaceholderMouseout","Button","buttonStyle","CancelContinueButtons","handleContinue","continueText","handleCancel","cancelText","CurrentWord","currentWord","currentWordExists","activeEditExists","activeEdit","syllables","text","onMouseEnter","viewOriginalWord","onMouseLeave","edited","displayOriginalWord","original","definition","handleCurrentWordReset","handleSyllableChange","disabled","displaySyllableUpdate","continueSyllableUpdate","cancelSyllableUpdate","handleDefinitionChange","displayDefinitionUpdate","continueDefinitionUpdate","cancelDefinitionUpdate","displayWordResetButton","handleResetClick","Title","title","handleTitleChange","target","currentPoemIndex","PoemBuilder","poem","console","log","valid","titleEdited","poemIsEmpty","handleSavePoem","handleResetPoem","criteria","handleCurrentWordChange","MiniPoem","mapping","History","history","isCurrentPoem","togglePoemHistory","NavBar","buttonNames","Object","keys","item","Game","toggleView","view","state","views","setState","displayHistory","activeView","addWordToMap","word","next","Map","undefined","get","lookupWord","wordObject","set","input","style","height","scrollHeight","scrollTop","window","scrollTo","scrollLeft","cancelWarning","displayWarning","resetSyllables","resetDefinition","updateCurrentWord","continueUpdate","updateSyllables","updateDefinition","newSyllableCount","edit","newDefinition","newWord","delete","validatePoem","updateSyllableCounts","getSyllableCount","targetWord","lineNumber","getSelection","modify","cursorStart","selectionStart","cursorEnd","selectionEnd","sel","isCollapsed","toString","setSelectionRange","handleCreateNewPoem","newPoem","createPoem","poemBuilder","preventDefault","lineCount","words","slice","split","currentPoem","currentLines","Array","fill","isPoemEmpty","exampleHaikuOriginal","originalWordWarning","splice","find","parseInt","newTitle","incrementCounter","counter","reduce","total","nextArgs","url","fetch","then","res","json","catch","err","JSON","stringify","getCurrentPoem","viewStatus","myWords","help","selfDestruct","viewNames","count","num","this","fullTitle","type","viewOptions","handleResetCurrentWordClick","myPoems","handleMouseoverHistory","handleMouseout","handleMouseoutHistory","renderSwitch","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6a42b98.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'; \n\nconst Line = (props) => {\n\tconst lineRef = useRef(null);\n\tuseEffect(() => {\n\t\tif (props.index === props.currentLine) {\n\t\t\tlineRef.current.focus();\n\t\t}\n\t}, [props.index, props.currentLine]);\n\t\t\n\treturn (\n\t\t<span className={`line ${props.lineValid ? 'valid' : 'invalid'}`}>\n\t\t\t<textarea \n\t\t\tref={lineRef}\n\t\t\tkey={props.index} \n\t\t\tcontentEditable=\"true\" \n\t\t\tsuppressContentEditableWarning={true} //https://stackoverflow.com/questions/49639144/why-does-react-warn-against-an-contenteditable-component-having-children-managed\n\t\t\tonChange={(e) => props.handleLineChange(e, props.index)}\n\t\t\tonKeyDown={(e) => props.handleKeyDown(e, props.index)}\n\t\t\tonClick={(e) => props.handleClick(e, props.index)}\n\t\t\tonInput={(e) => props.autoresize(e)}\n\t\t\tplaceholder={props.placeholderLine}\n\t\t\tvalue={props.line ? props.line : \"\"}\n\t\t\tonMouseOver={(e) => props.handleMouseover(props.index)}\n\t\t\tonMouseOut={(e) => props.handleMouseOut(props.index)}\n\t\t\t/>\n\t\t\t<h4 className=\"counter\"> {props.syllableCount} / {props.syllableLimit}</h4>\n\t\t</span>\n\t);\n};\n\nexport default Line; ","import React from 'react'; \nimport Line from './Line';\n\nconst Lines = (props) => { \n\tconst lines = props.lines; \n\tconst placeholders = {...props.exampleHaiku}; \n\t\t\n\treturn (\n\t\tlines && lines.length ? \n\t\t\tlines.map((line, i) => {\n\t\t\t\treturn (<Line \n\t\t\t\t\tclassName=\"line\"\n\t\t\t\t\tlineValid={props.syllableCounts[i] === props.syllableLimits[i] ? true : false}\n\t\t\t\t\tkey={i} \n\t\t\t\t\tline={line} \n\t\t\t\t\tplaceholderLine={placeholders[i]}\n\t\t\t\t\tcurrentLine={props.currentLine}\n\t\t\t\t\tsyllableLimit={props.syllableLimits[i]} \n\t\t\t\t\tsyllableCount={props.syllableCounts[i]}\n\t\t\t\t\tindex={i}\n\t\t\t\t\thandleKeyDown={props.handleKeyDown}\n\t\t\t\t\thandleClick={props.handleClick}\n\t\t\t\t\tautoresize={props.autoresize}\n\t\t\t\t\thandleLineChange={props.handleLineChange}\n\t\t\t\t\thandleMouseover={props.handlePlaceholderMouseover}\n\t\t\t\t\thandleMouseOut={props.handlePlaceholderMouseout}\n\t\t\t\t/>);\n\t\t\t})\n\t\t: null\n\t);\n}\n\nexport default Lines; ","import React from 'react';\n\nconst Button = (props) => {\n\treturn <button onClick={props.handleClick} className={props.buttonStyle}>{props.value}</button>;\n};\n\nexport default Button; ","import React from 'react'; \nimport Button from './Button';\n\nconst CancelContinueButtons = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<Button handleClick={props.handleContinue} buttonStyle=\"continue\" value={props.continueText || \"Continue\"}/>\n\t\t\t<Button handleClick={props.handleCancel} buttonStyle=\"cancel\" value={props.cancelText || \"Cancel\"}/>\n\t\t</>\n\t);\n}\n\nexport default CancelContinueButtons; ","import React from 'react';\nimport Button from './Button';\nimport CancelContinueButtons from './CancelContinueButtons';\n\nconst CurrentWord = (props) => {\t\n\tconst { currentWord } = props;\t\n\tconst currentWordExists = (currentWord && 'text' in currentWord && 'syllables' in currentWord); \n\tconst activeEditExists = (currentWord && 'activeEdit' in currentWord && currentWord.activeEdit); \n\tif (!currentWordExists && !activeEditExists) { return null; }\n\tconst syllableCount = props.currentWord.syllables; \n\t\n\treturn (\n\t\t<>\n\t\t\t<div className=\"currentWord\">\n\t\t\t\t<h1 className=\"currentWordDisplay\">\n\t\t\t\t{`${currentWordExists ? currentWord.text : ''}`}\n\t\t\t\t</h1>\n\t\t\t\t<span \n\t\t\t\t\tonMouseEnter={(e) => props.viewOriginalWord(true)}\n\t\t\t\t\tonMouseLeave={(e) => props.viewOriginalWord(false)}>\n\t\t\t\t{props.currentWord.edited ? \n\t\t\t\t\t\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclassName=\"asterisk\" \t\t\t\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t*\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t{props.displayOriginalWord ? \n\t\t\t\t\t<span className=\"originalWord\">\n\t\t\t\t\t\t<span> This word was edited (by you). Here is the original:</span>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<span>{currentWord.original ? currentWord.original.syllables : null} syllables</span>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<span>{currentWord.original ? currentWord.original.definition : null}</span>\n\t\t\t\t\t\t<Button value=\"Reset word to original\" handleClick={props.handleCurrentWordReset}></Button>\n\t\t\t\t\t</span>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t</span>\n\t\t\t\n\t\t\t<span className=\"currentWordSyllables\">\n\t\t\t\t<textarea \n\t\t\t\t\tclassName=\"currentWordSyllableCount\" \n\t\t\t\t\tonChange={(e) => props.handleSyllableChange(e)}\n\t\t\t\t\tvalue={syllableCount}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<textarea \n\t\t\t\t\tclassName=\"currentWordSyllableText\" \n\t\t\t\t\tdisabled \n\t\t\t\t\tvalue={` syllable${(syllableCount > 1 || syllableCount === 0) ? \"s\" : \"\"}`}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t\t\n\t\t\t{props.displaySyllableUpdate ? \n\t\t\t<CancelContinueButtons \n\t\t\t\tcontinueText=\"Update\" \n\t\t\t\tcancelText=\"Cancel\" \n\t\t\t\thandleContinue={props.continueSyllableUpdate} \n\t\t\t\thandleCancel={props.cancelSyllableUpdate}\n\t\t\t/>\n\t\t\t: null}\n\t\t\t\t\n\t\t\t{currentWordExists && 'definition' in currentWord ? \n\t\t\t<textarea \n\t\t\t\tclassName=\"currentDefinition autoresize\" \n\t\t\t\tvalue={currentWord.definition}\n\t\t\t\tonChange={(e) => props.handleDefinitionChange(e)}\n\t\t\t\tonInput={(e) => props.autoresize(e)}\n\t\t\t/> \n\t\t\t: null}\n\t\t\t\t\n\t\t\t{props.displayDefinitionUpdate ? \n\t\t\t<CancelContinueButtons\n\t\t\t\tcontinueText=\"Update\"\n\t\t\t\tcancelText=\"Cancel\"\n\t\t\t\thandleContinue={props.continueDefinitionUpdate}\n\t\t\t\thandleCancel={props.cancelDefinitionUpdate}\n\t\t\t/>\n\t\t\t: null}\n\t\t\t\n\t\t\t{props.displayWordResetButton ? \n\t\t\t<Button \n\t\t\t\thandleClick={props.handleResetClick} \n\t\t\t\tbuttonStyle=\"recycle\"\n\t\t\t\tvalue={`Reset syllable count & definition`}\n\t\t\t/>\n\t\t\t: null}\n\n\n\t\t\t</div>\n\t\t\t\n\t\t</>\n\t);\n};\n\nexport default CurrentWord; ","import React from 'react';\n\nconst Title = (props) => {\n\treturn (\n\t\t<div className=\"title\">\n\t\t\t<span><span className={'underline'}>title</span>\n\t\t\t:\n\t\t\t</span>\n\t\t\t<textarea \n\t\t\t\tclassName={'title'}\n\t\t\t\tvalue={props.title}\n\t\t\t\tonChange={(e) => props.handleTitleChange(e.target.value, props.currentPoemIndex)}\t\n\t\t\t\t/*cols={1}*/\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Title; ","import React from 'react'; \nimport Lines from './Lines';\nimport CurrentWord from './CurrentWord';\nimport Button from './Button';\nimport Title from './Title';\n\nconst PoemBuilder = (props) => {\n\tconst poem = props.poem; \n\tif (!poem) { return null; }\n\tconst lines = poem.activeEdit ? poem.activeEdit : poem.lines;\n\tconsole.log(`PoemBuilder: lines: ${lines}`);\n\tconst valid = poem.valid;\n\t\n\treturn (\n\t\t<>\n\t\t\t<div className=\"poem\">\n\t\t\t\t\n\t\t\t\t{poem ? \n\t\t\t\t\t<>\n\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Title\n\t\t\t\t\ttitle={poem ? poem.title : \"\"}\n\t\t\t\t\thandleTitleChange={props.handleTitleChange}\n\t\t\t\t\tedited={props.titleEdited}\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t{ !props.poemIsEmpty ?   \t\t\t\t\t\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\thandleClick={props.handleSavePoem}\n\t\t\t\t\t\t\t\tvalue={\"Save & create new poem\"}/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\thandleClick={props.handleResetPoem}\n\t\t\t\t\t\t\t\tvalue={\"Reset\"}/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t: null }\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"lines\">\n\t\t\t\t\t\t<Lines \n\t\t\t\t\t\t\thandleKeyDown={props.handleKeyDown}\n\t\t\t\t\t\t\thandleClick={props.handleClick}\n\t\t\t\t\t\t\tlines={lines} \n\t\t\t\t\t\t\tsyllableLimits={props.criteria.syllableLimits}\n\t\t\t\t\t\t\tsyllableCounts={props.syllableCounts}\n\t\t\t\t\t\t\texampleHaiku={props.criteria.exampleHaiku}\n\t\t\t\t\t\t\tautoresize={props.autoresize}\n\t\t\t\t\t\t\tcurrentLine={props.currentLine}\n\t\t\t\t\t\t\thandleLineChange={props.handleLineChange}\n\t\t\t\t\t\t\thandlePlaceholderMouseover={props.handlePlaceholderMouseover}\n\t\t\t\t\t\t\thandlePlaceholderMouseout={props.handlePlaceholderMouseout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<hr className=\"divider\"/>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t</>\n\t\t\t\t: null }\n\n\t\t\t\t\n\n\n\t\t\t</div>\n\t\t\t\n\t\t\t{poem && !props.poemIsEmpty ? \n\t\t\t\t<>\n\t\t\t\t\t{props.valid ? \n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>This haiku is valid!</h1>\n\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t: null}\n\t\n\t\t\t\t\t<CurrentWord currentWord={props.currentWord}\n\t\t\t\t\t\t\thandleSyllableChange={props.handleSyllableChange}\n\t\t\t\t\t\t\tdisplaySyllableUpdate={props.displaySyllableUpdate}\n\t\t\t\t\t\t\tcontinueSyllableUpdate={props.continueSyllableUpdate}\n\t\t\t\t\t\t\tcancelSyllableUpdate={props.cancelSyllableUpdate}\n\t\t\t\t\t\t\tautoresize={props.autoresize}\n\t\t\t\t\t\t\thandleResetClick={props.handleResetClick}\n\t\t\t\t\t\t\thandleCurrentWordChange={props.handleCurrentWordChange}\n\t\t\t\t\t\t\thandleDefinitionChange={props.handleDefinitionChange}\n\t\t\t\t\t\t\tcontinueDefinitionUpdate={props.continueDefinitionUpdate}\n\t\t\t\t\t\t\tcancelDefinitionUpdate={props.cancelDefinitionUpdate}\n\t\t\t\t\t\t\tdisplayDefinitionUpdate={props.displayDefinitionUpdate}\n\t\t\t\t\t\t\tviewOriginalWord={props.viewOriginalWord}\n\t\t\t\t\t\t\tdisplayOriginalWord={props.displayOriginalWord}\n\t\t\t\t\t\t\thandleCurrentWordReset={props.handleCurrentWordReset}\n\t\t\t\t\t\t/> \n\t\t\t\t</>\n\t\t\t\t\t\n\t\t\t: null}\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t</>\n\t)\n};\n\nexport default PoemBuilder; ","import React from 'react'; \n\nconst MiniPoem = (props) => {\n\t\n\tconst mapping = (props.lines ? (props.lines.length ? \n\t\t(props.lines.map((line, index) => {\n\t\t\treturn (\n\t\t\t\t<span key={index}>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{line}\n\t\t\t\t\t</span>\n\t\t\t\t\t<br/>\n\t\t\t\t</span>\n\t\t\t);\n\t\t})) : null) : null)\t\n\t\n\treturn (props.lines && props.lines.length > 0 ? \n\t<span onClick={props.handleClick}>\n\t\t{mapping}\n\t</span> \n\t: null);\n\t\t\n\t\n\t\n\t\n};\n\nexport default MiniPoem;","import React from 'react'; \nimport MiniPoem from './MiniPoem';\n\nconst History = (props) => {\n\tif (!props.history || !props.history.length) {\n\t\treturn null;\n\t}\n\tconst poem = [...props.history][props.currentPoemIndex];\n\tconst valid = poem ? poem.valid : false;\n\n\tconst lines = poem.activeEdit ? {...poem.activeEdit} : poem.lines;\n\n\treturn (\n\t\t<div className=\"history\">\n\t\t\t\t{props.history.length ? \n\t\t\t\tprops.history.map((poem, index) => {\n\t\t\t\t\tlet isCurrentPoem = (index === props.currentPoemIndex);\t\t\t\t\t\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={index}>\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\tdisabled={isCurrentPoem}\n\t\t\t\t\t\t\t\t\tclassName=\"poemHistoryButton\" \n\t\t\t\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\t\t\t\tonClick={(e) => props.togglePoemHistory(index)}>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t{isCurrentPoem ? \n\t\t\t\t\t\t\t\t\t\t<h4><strong>{poem.title}</strong></h4> \n\t\t\t\t\t\t\t\t\t: <h4>{poem.title}</h4>}\n\t\t\t\t\t\t\t\t\t<br/>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<MiniPoem \n\t\t\t\t\t\t\t\t\t\ttitle={poem.title}\n\t\t\t\t\t\t\t\t\t\tlines={lines} \n\t\t\t\t\t\t\t\t\t\tclassName=\"miniPoem\" \n\t\t\t\t\t\t\t\t\t\tindex={index}/>\n\t\t\t\t\t\t\t\t\t{isCurrentPoem ? <span>*<sub>active poem</sub></span> : null}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t}) : <div>No poems</div>}\n\t\t</div>\t\t\n\t);\n\t\t\n\t};\n\n\texport default History; ","import React from 'react'; \n\nconst NavBar = (props) => {\n\tconst { buttonNames } = props; \n\n\t/*const buttons = [];\n\tfor(let key in navButtons) {\n\t\tbuttons.\n\t}\n\t*/\n\n\treturn (\n\t\t<div className=\"nav\">\n\t\t\t{Object.keys(buttonNames).map((item, i) => {\n\t\t\t\treturn <button \n\t\t\t\t\tclassName={item === \"history\" ? \"selected\" : null} \n\t\t\t\t\tkey={i} \n\t\t\t\t\tonClick={(e) => \n\t\t\t\t\tprops.handleClick(item)}>\n\t\t\t\t\t{buttonNames[item]}\n\t\t\t\t</button>\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default NavBar;","import React from 'react';\nimport PoemBuilder from './PoemBuilder';\nimport History from './History';\nimport Button from './Button';\nimport NavBar from './NavBar';\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcounter: 0, \n\t\t\tcurrentPoemIndex: 0,\n\t\t\tcurrentWord: null,\n\t\t\tcriteria: {\n\t\t\t\tlineCount: 3,\n\t\t\t\tsyllableLimits: [5,7,5],\n\t\t\t\tplaceholders: [\"Line 1 uses 5 syllables\", \"Line 2 uses 7 syllables\", \"Line 3 uses 5 syllables\"],\n\t\t\t\texampleHaiku: [\"haikus are easy\", \"but sometimes they don't make sense\", \"refrigerator\"],\n\t\t\t\texampleHaikuOriginal:[\"haikus are easy\", \"but sometimes they don't make sense\", \"refrigerator\"],\n\t\t\t},\t\t\n\t\t\thistory: null, \n\t\t\tmap: new Map(), \n\t\t\tpoemIsEmpty: true,\n\t\t\tsyllableCounts: [0, 0, 0],\n\t\t\tdisplayHistory: false,\n\t\t\tactiveView: null,\n\t\t\tviews: {\n\t\t\t\tpoemBuilder: \"poemBuilder\",\n\t\t\t\tmyWords:  \"myWords\",\n\t\t\t\thelp:  \"help\",\n\t\t\t\tselfDestruct:  \"selfDestruct\",\n\t\t\t\thistory:  \"history\",\n\t\t\t},\n\t\t\tviewNames: {\n\t\t\t\tpoemBuilder: \"Current Build\",\n\t\t\t\tmyWords:  \"Word Bank\",\n\t\t\t\thelp:  \"Help\",\n\t\t\t\tselfDestruct:  \"Self Destruct\",\n\t\t\t\thistory:  \"My Poems\",\n\t\t\t},\n\t\t};\n\t};\n\n\ttoggleView = (view=\"\") => {\n\t\tif (!view || !(view in this.state.views)) { \n\t\t\treturn; \n\t\t} \n\t\t// toggle history on/off\n\t\telse if (view === this.state.views.history) {\n\t\t\tthis.setState({displayHistory: !this.state.displayHistory});\n\t\t}\n\t\telse if (view === this.state.activeView){\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tthis.setState({activeView: view});\n\t\t}\n\t};\n\t\n\t// checks in map cache for word. cache hit --> \n\t// returns the word object, cache miss -> \n\t// returns null and calls lookupWord before \n\t// updating the map cache\n\taddWordToMap = (word, next) => {\n\t\tconst map = new Map(this.state.map);\n\t\tif (map.get(word) !== undefined) {\n\t\t\tnext(map.get(word)); // use cached word\n\t\t} else {\n\t\t\t// lookup word\n\t\t\tthis.lookupWord(word, (wordObject) => { \n\t\t\t\tthis.setState({map: map.set(word, wordObject)}); \n\t\t\t\tnext(wordObject); \n\t\t\t});\n\t\t}\t\t\n\t};\n\t\n\tautoresize = (e) => {\n\t\tlet input = e.target; \n\t\tinput.style.height = 'auto';\n\t\tinput.style.height = input.scrollHeight+'px';\n\t\tinput.scrollTop = input.scrollHeight; \n\t\twindow.scrollTo(window.scrollLeft, (input.scrollTop + input.scrollHeight));\n\t};\n\n\tcancelWarning = (displayWarning, resetSyllables=true, resetDefinition=true) => {\n\t\tif (this.state.currentWord && this.state.currentWord.activeEdit) {\n\t\t\tthis.updateCurrentWord(null, resetSyllables, resetDefinition);\n\t\t}\n\t\tthis.setState({displayWarning: false});\n\t};\n\n\tcontinueUpdate = (displayWarning, updateSyllables=true, updateDefinition=true) => {\n\t\tif (!this.state.currentWord || !this.state.currentWord.activeEdit) { return; }\n\t\t\n\t\tconst currentWord = {...this.state.currentWord};\n\t\t\n\t\tconst newSyllableCount = (updateSyllables ? this.state.currentWord.activeEdit.edit.syllables : currentWord.syllables);\n\t\tconst newDefinition = (updateDefinition ? this.state.currentWord.activeEdit.edit.definition : currentWord.definition); \n\t\t\n\t\tconst newWord = {...currentWord, syllables: newSyllableCount, definition: newDefinition, original:{...currentWord}, edited: true, activeEdit: false};\n\t\tconst map = new Map(this.state.map);\n\t\tmap.delete(currentWord.text);\n\t\tmap.set(currentWord.text, newWord);\n\n\t\tlet valid; \n\t\tconst history = this.state.history.map((poem, i) => {\n\t\t\tif (i === this.state.currentPoemIndex){\n\t\t\t\tvalid = this.validatePoem();\n\t\t\t\treturn {...poem, valid: valid}\n\t\t\t} else { return poem }; \n\t\t});\n\n\t\tif (updateSyllables) {\n\t\t\tthis.cancelWarning(this.state.displaySyllableUpdate, true, false); \n\t\t}\n\n\t\tif (updateDefinition) {\n\t\t\tthis.cancelWarning(this.state.displayDefinitionUpdate, false, true);\n\t\t}\n\n\t\tthis.updateSyllableCounts();\n\t\t\n\t\tthis.setState({\n\t\t\tmap: map,\n\t\t\tdisplaySyllableUpdate: false,\n\t\t\tcurrentWord: newWord,\n\t\t\thistory: history,\n\t\t\tvalid: valid,\n\t\t});\n\t};\n\t\n\tcreatePoem(count=null, title=`Haiku`){\n\t\tconst num = count ? count : this.state.counter;\n\t\tthis.incrementCounter();\n\t\tconst fullTitle = `${title} ${num}`;\n\t\tlet newPoem = {\n\t\t\ttitle: fullTitle,\n\t\t\tlines: Array(3).fill(\"\"),\n\t\t\tlineCount: 3,\n\t\t\ttype: \"haiku\",\n\t\t\tactiveEdit: Array(3).fill(\"\"),\n\t\t\tvalid: false,\n\t\t};\n\t\treturn newPoem;\n\t};\n\t\n\tcreateWord(text=\"\", syllables=\"\", definition=\"\"){\n\t\tconst word = {\n\t\t\ttext: text,\n\t\t\tsyllables: syllables, \n\t\t\tdefinition: definition,\n\t\t\tactiveEdit: {\n\t\t\t\tsyllables: false,\n\t\t\t\tdefinition: false,\n\t\t\t\tedit: {}\n\t\t\t},\n\t\t\tedited: false,\n\t\t};\n\t\treturn {...word};\n\t};\n\t\n\tgetSyllableCount = (word) => {\n\t\tconst map = new Map(this.state.map);\n\t\tconst targetWord = map.get(word);\n\t\tif (!targetWord) { return 0; }\t\t\n\t\treturn targetWord.syllables; \n\t};\n\t\n\thandleClick = (e, lineNumber) => {\t\t\t\n\t\t// https://stackoverflow.com/questions/7563169/detect-which-word-has-been-clicked-on-within-a-text\n\t\tvar word = '';\n\t\tlet selection = window.getSelection().modify;\n\t\tif (selection && window.getSelection) {\n\t\t\t\t\t\t\n\t\t\t// save original cursor position\n\t\t\t// http://dimafeldman.com/js/maintain-cursor-position-after-changing-an-input-value-programatically/\n\t\t\tvar cursorStart = e.target.selectionStart,\n\t\t\t\tcursorEnd = e.target.selectionEnd;\n\t\t\t\n\t\t\tvar sel = window.getSelection();\n\t\t\tif (sel.isCollapsed) {\n\t\t\t\tsel.modify('move', 'forward', 'character');\n\t\t\t\tsel.modify('move', 'backward', 'word');\n\t\t\t\tsel.modify('extend', 'forward', 'word');\n\t\t\t\tword = sel.toString();\n\t\t\t\tsel.modify('move', 'forward', 'character'); // clear selection\n\t\t\t} else {\n\t\t\t\tword = sel.toString();\n\t\t\t}\n\t\t\t\n\t\t\t// restore cursor position\n\t\t\te.target.setSelectionRange(cursorStart, cursorEnd);\n\t\t}\n\t\t\n\t\tconst currentWord = this.state.map.get(word);\n\t\tif (currentWord === undefined){\n\t\t\tthis.updateCurrentWord(word);\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tcurrentWord: {...currentWord, edited:false},\n\t\t\t});\n\t\t}\n\t\t\n\t\tthis.setState({currentLine: lineNumber});\n\t};\n\t\n\thandleCreateNewPoem = () => {\t\n\t\tconst newPoem = {...this.createPoem()}; \n\t\tlet history;\n\t\tif (!this.state.history) { history = [ newPoem ]}\n\t\telse {\n\t\t\thistory = [...this.state.history, newPoem];\n\t\t}\n\t\t\t\t\t\t \n\t\tthis.setState({ \n\t\t\thistory: history,\n\t\t\tcurrentPoemIndex: (history.length ? history.length-1 : 0),\n\t\t\tpoemIsEmpty: true,\n\t\t\tactiveView: this.state.views.poemBuilder\n\t\t});\n\t};\n\t\n\thandleCurrentWordChange = (e) => {\n\t\tthis.updateCurrentWord(e.target.value);\n\t};\n\t\n\thandleCurrentWordReset = () => {\n\t\tthis.updateCurrentWord(this.state.currentWord.original.text);\n\t};\n\t\n\t// keycodes: https://keycode.info/\n\thandleKeyDown = (e) => {\n\t\tlet currentLine; \n\t\tswitch(e.key) {\n\t\t\tcase 'Enter':\n\t\t\t\te.preventDefault();\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowDown': \n\t\t\t\te.preventDefault(); \n\t\t\t\tcurrentLine = {...this.state.currentLine};\n\t\t\t\tif (++currentLine < this.state.lineCount) {\n\t\t\t\t\tthis.setState({ currentLine: currentLine });\n\t\t\t\t}\n\t\t\t\tbreak; \n\t\t\tcase 'ArrowUp': \n\t\t\t\te.preventDefault();\n\t\t\t\tcurrentLine = {...this.state.currentLine}; \n\t\t\t\tif (--currentLine >= 0) {\n\t\t\t\t\tthis.setState({ currentLine: currentLine });\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t};\n\t\n\thandleLineChange = (e, lineNumber) => {\t\t\n\t\t// save original cursor position\n\t\tvar cursorStart = e.target.selectionStart,\n\t\t\tcursorEnd = e.target.selectionEnd;\t\t\n\t\t\n\t\tlet line = e.target.value;\n\n\t\t// line from start up to current cursor position\n\t\tvar leftOfCursor = e.target.value.slice(0,e.target.selectionEnd);\n\t\tvar words = leftOfCursor.split(\" \");\n\t\tvar currentWord = words[words.length-1];\n\n\t\tthis.updateCurrentWord(currentWord);\n\t\t\n\t\tlet currentPoem = [...this.state.history][this.state.currentPoemIndex];  \n\n\t\tconst history = this.state.history.map((poem, index) => {\n\t\t\tif (index === this.state.currentPoemIndex) {\n\t\t\t\tlet currentLines = [...poem.activeEdit];\n\t\t\t\tif (!currentLines) { currentLines = Array(this.state.lineCount).fill(\"\")}\n\t\t\t\tcurrentLines[lineNumber] = line;\n\t\t\t\treturn {...poem, activeEdit: currentLines};\n\t\t\t} else {\n\t\t\t\treturn {...poem, activeEdit: null}; \n\t\t\t}\n\t\t});\n\t\t\n\t\tconst lines = (currentPoem.activeEdit && currentPoem.activeEdit.length) ? currentPoem.activeEdit : currentPoem.lines; \n\n\t\tthis.setState({ \n\t\t\thistory: history,\n\t\t\tpoemIsEmpty: this.isPoemEmpty(lines)\n\t\t});\n\n\t\tthis.validatePoem();\t\t\n\t\t\t\t\n\t\t// restore cursor position\n\t\te.target.setSelectionRange(cursorStart, cursorEnd); \n\t};\n\t\n\thandlePlaceholderMouseout = (lineNumber) => {\n\t\tif (!this.state.exampleHaiku) { return; }\n\t\t\n\t\tthis.setState({\n\t\t\texampleHaiku: this.state.exampleHaiku.map((item, i) => \n\t\t\t\t(lineNumber === i) ? this.state.exampleHaikuOriginal[i] : item\n\t\t\t)\n\t\t});\n\t};\n\t\n\thandlePlaceholderMouseover = (lineNumber) => {\n\t\tif (!this.state.exampleHaiku) { return; }\n\t\t\n\t\tthis.setState({\n\t\t\texampleHaiku: this.state.exampleHaiku.map((item, i) => \n\t\t\t\t(i === lineNumber) ? this.state.placeholders[i] : this.state.exampleHaikuOriginal[i]\n\t\t)});\n\t};\n\t\t\n\thandleResetClick = () => {\n\t\tthis.updateCurrentWord();\n\t\tthis.setState({originalWordWarning: false});\n\t};\n\t\n\thandleResetPoem = () => {\n\t\tthis.setState({ \n\t\t\thistory: [...this.state.history].splice(this.state.currentPoemIndex, 1, this.createPoem()),\n\t\t\tpoemIsEmpty: true,\n\t\t});\n\t};\n\t\n\thandleSavePoem = () => {\n\t\tconst poem = [...this.state.history].splice(this.state.currentPoemIndex,1).find(e=>true); \n\t\tif (!poem || !poem.lines){\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tpoemIsEmpty:true\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// replaces `lines` with `activeEdit`s \n\t\tconst history = [...this.state.history].map((item, i) => {\n\t\t\tif (i === this.state.currentPoemIndex) {\n\t\t\t\titem.lines = [...item.activeEdit]; \n\t\t\t\titem.activeEdit = null;\n\t\t\t\treturn item;\n\t\t\t} else {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ \n\t\t\thistory: history,\n\t\t\tcurrentPoemIndex: history.length-1,\n\t\t});\n\n\t\tthis.handleCreateNewPoem();\n\t};\t\n\n\thandleDefinitionChange = (e) => {\n\t\tif (e.target.value && e.target.value !== this.state.currentWord.definition) {\n\t\t\tthis.setState({displayDefinitionUpdate: true});\n\t\t} else {\n\t\t\tthis.setState({displayDefinitionUpdate: false});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcurrentWord: {\n\t\t\t\t...this.state.currentWord, \n\t\t\t\tactiveEdit: {...this.state.activeEdit, \n\t\t\t\t\tdefinition: true, \n\t\t\t\t\tedit: {...this.state.currentWord, definition: e.target.value}}\n\t\t\t}\n\t\t});\n\t};\n\n\thandleSyllableChange = (e) => {\n\t\tif (e.target.value && e.target.value !== this.state.currentWord.syllables) {\n\t\t\tthis.setState({displaySyllableUpdate: true});\n\t\t} else {\n\t\t\tthis.setState({displaySyllableUpdate: false})\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\tcurrentWord: {\n\t\t\t\t...this.state.currentWord, \n\t\t\t\tactiveEdit: {...this.state.activeEdit, \n\t\t\t\t\tsyllables: true, \n\t\t\t\t\tedit: {...this.state.currentWord, syllables: (e.target.value ? parseInt(e.target.value) : '')}\n\t\t\t\t}\n\t\t\t}\n\t\t});\t\t\n\t};\n\t\n\thandleTitleChange = (newTitle) => {\n\t\tthis.setState({history: this.state.history.map((poem, index) => {\n\t\t\tif (index === this.state.currentPoemIndex) {\n\t\t\t\treturn {...poem, title: newTitle}\n\t\t\t} else {\n\t\t\t\treturn poem; \n\t\t\t}\n\t\t})});\n\t};\n\t\n\tincrementCounter = () => {\n\t\t\n\t\tthis.setState({counter: this.state.counter+1});\n\t};\n\t\n\tisPoemEmpty = (lines) => {\n\t\tif (!lines || !lines.length) {\n\t\t\treturn true; \n\t\t}\n\t\treturn lines.reduce((total, currentLine) => total && !currentLine, true);\n\t};\n\t\n\tlookupWord = (text, next, ...nextArgs) => {\n\t\tif (!text && !next) { console.log(`lookupWord --> word: ${text}`); return null; }\n\t\tvar url = `http://localhost:8080/wordAPI/${text}`;\n\t\tfetch(url)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tconst word = {\n\t\t\t\t\ttext: text,\n\t\t\t\t\tdefinition: res.definition,\n\t\t\t\t\tsyllables: res.syllables,\n\t\t\t\t\tedited: res.edited,\n\t\t\t\t\tactiveEdit: res.activeEdit\n\t\t\t\t}\n\t\t\t\tnext(word, nextArgs);\n\t\t\t})\n\t\t\t.catch(err => err);\n\t};\n\n\ttogglePoemHistory = (index=0) => {\n\t\tif (index === this.state.currentPoemIndex) { return; }\n\t\tconst currentPoem = [...this.state.history][this.state.currentPoemIndex];\n\t\tconsole.log(`togglePoemHistory, history1: ${JSON.stringify(this.state.history)}`);\n\n\t\tconsole.log(`togglePoemHistory, currentPoem: ${JSON.stringify(currentPoem)}`);\n\t\tif (!currentPoem) { return null; }\n\t\tconst lines = (currentPoem.activeEdit && currentPoem.activeEdit.length) ? currentPoem.activeEdit : currentPoem.lines;\n\t\tconsole.log(`togglePoemHistory, lines: ${JSON.stringify(currentPoem.activeEdit)}`);\n\t\tconsole.log(`togglePoemHistory, index: ${JSON.stringify(this.state.currentPoemIndex)}`);\n\t\tconsole.log(`togglePoemHistory, [...history]: ${JSON.stringify([...this.state.history])}`);\n\t\tconst newPoem = {...[...this.state.history][this.state.currentPoemIndex], lines: currentPoem.activeEdit};\n\t\tconsole.log(`togglePoemHistory, newPoem: ${JSON.stringify(newPoem)}`);\n\t\tlet history = [...this.state.history];\n\t\thistory.splice(this.state.currentPoemIndex,1,newPoem);\n\n\n\t\tconsole.log(`togglePoemHistory, history3: ${JSON.stringify(history)}`);\n\n\n\t\tthis.setState({\n\t\t\thistory: history,\n\t\t\tcurrentPoemIndex: index,\n\t\t\tpoemIsEmpty: this.isPoemEmpty(lines),\n\t\t});\n\t};\n\n\t// If newWord=`null`, refresh currentWord by querying the db and overwriting local changes to syllable/definition. \n\t// Else, replace currentWord with the lookup results for newWord. \n\tupdateCurrentWord = (newWord=null, resetSyllables=true, resetDefinition=true) => {\n\t\tconst currentWord = {...this.state.currentWord};\n\t\tif (!currentWord && !newWord) { return; }\n\t\tif (!newWord) { \n\t\t\tnewWord = ('text' in currentWord) ? currentWord.text : '';\n\t\t} \n\t\tthis.addWordToMap(newWord, (wordObject) => {\n\t\t\tthis.setState({currentWord: {...wordObject, activeEdit: false}})\n\t\t}); \n\t};\n\n\tgetCurrentPoem = () => {\n\t\treturn [...this.state.history].splice(this.state.currentPoemIndex, 1).find(e=>true); \n\t}\n\n\tupdateSyllableCounts = () => {\n\t\tconst poem = this.getCurrentPoem(); \n\t\tif (!poem || !poem.lines || !poem.lines.length || !poem.activeEdit || !poem.activeEdit.length) { return null; }\n\t\t\n\t\tconst lines = (poem.activeEdit.length ? poem.activeEdit : poem.lines);\n\n\t\tconst syllableCounts = lines.map(line => {\n\t\t\tif (!line) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t\n\t\t\treturn line.split(\" \").reduce((total, word) => {\n\t\t\t\tconst targetWord = this.state.map.get(word);\n\t\t\t\tif (!targetWord || !('syllables' in targetWord) || targetWord.syllables === undefined) { return total + 0; }\t\n\t\t\t\treturn total + targetWord.syllables;\n\t\t\t}, 0); \n\t\t});\n\t\tthis.setState({syllableCounts: syllableCounts});\n\t\treturn syllableCounts; \n\t}\n\n\tvalidatePoem = (lines) => {\n\t\tconst syllableCounts = this.updateSyllableCounts();\n\t\tif (!lines) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tif (syllableCounts[i] !== this.state.criteria.syllableLimits[i]) {\n\t\t\t\tthis.setState({valid: false});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tthis.setState({valid:true});\n\t\treturn true; \n\t};\n\t\n\tviewOriginalWord = (viewStatus) => {\n\t\t\n\t\tthis.setState({ originalWordWarning: viewStatus});\n\t};\n\t\n\trenderSwitch(view) {\n\t\t\n\t\tlet poem = {}; \n\t\tif (this.state.history) {\n\t\t\tpoem = [...this.state.history][this.state.currentPoemIndex];\n\t\t} \n\t\tconst viewOptions = this.state.views;\n\n\t\tswitch(view) {\n\t\t\tcase null: \n\t\t\t\treturn null;\n\t\t\t\tbreak;\n\t\t\tcase viewOptions.poemBuilder:\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t<PoemBuilder \n\t\t\t\t\t\t\tsyllableCounts={this.state.syllableCounts}\n\t\t\t\t\t\t\tpoem={poem}\n\t\t\t\t\t\t\tvalid={this.state.valid}\n\t\t\t\t\t\t\tpoemIsEmpty={this.state.poemIsEmpty}\n\t\t\t\t\t\t\tmap={this.state.map}\n\t\t\t\t\t\t\tcriteria={this.state.criteria}\n\t\t\t\t\t\t\tlineCount={this.state.lineCount} \n\t\t\t\t\t\t\tcurrentPoemIndex={this.state.currentPoemIndex}\n\t\t\t\t\t\t\thandleKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\t\t\tcurrentWord={this.state.currentWord}\n\t\t\t\t\t\t\thandleSyllableChange={this.handleSyllableChange}\n\t\t\t\t\t\t\tdisplaySyllableUpdate={this.state.displaySyllableUpdate}\n\t\t\t\t\t\t\tdisplayDefinitionUpdate={this.state.displayDefinitionUpdate}\n\t\t\t\t\t\t\tautoresize={this.autoresize}\n\t\t\t\t\t\t\tcurrentLine={this.state.currentLine}\n\t\t\t\t\t\t\thandleResetClick={this.handleResetCurrentWordClick}\n\t\t\t\t\t\t\thandleLineChange={this.handleLineChange}\n\t\t\t\t\t\t\thandleCurrentWordChange={this.handleCurrentWordChange}\n\t\t\t\t\t\t\thandleDefinitionChange={this.handleDefinitionChange}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontinueDefinitionUpdate={() => this.continueUpdate(this.state.displayDefinitionUpdate, false, true)}\n\t\t\t\t\t\t\tcontinueSyllableUpdate={() => this.continueUpdate(this.state.displaySyllableUpdate, true, false)}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcancelDefinitionUpdate={() => this.cancelWarning(this.state.displayDefinitionUpdate, false, true)}\n\t\t\t\t\t\t\tcancelSyllableUpdate={() => this.cancelWarning(this.state.displaySyllableUpdate, true, false)}\n\t\t\t\t\t\t\thandleSavePoem={this.handleSavePoem}\n\t\t\t\t\t\t\thandleResetPoem={this.handleResetPoem}\n\t\t\t\t\t\t\tviewOriginalWord={this.viewOriginalWord}\n\t\t\t\t\t\t\tdisplayOriginalWord={this.state.displayOriginalWord}\n\t\t\t\t\t\t\thandleCurrentWordReset={this.handleCurrentWordReset}\n\t\t\t\t\t\t\thandleTitleChange={this.handleTitleChange}\n\t\t\t\t\t\t\ttitleEdited={this.state.titleEdited}\n\t\t\t\t\t\t\thandlePlaceholderMouseover={this.handlePlaceholderMouseover}\n\t\t\t\t\t\t\thandlePlaceholderMouseout={this.handlePlaceholderMouseout}\n\t\t\t\t\t\t\tcreatePoem={this.createPoem}\n\t\t\t\t\t\t\tupdateSyllableCounts={this.updateSyllableCounts}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.state.displayHistory ? \n\t\t\t\t\t\t\t<History \n\t\t\t\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\t\t\t\tcurrentPoemIndex={this.state.currentPoemIndex}\n\t\t\t\t\t\t\t\ttogglePoemHistory={this.togglePoemHistory}\n\t\t\t\t\t\t\t\tpoemIsEmpty={this.state.poemIsEmpty}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase viewOptions.myPoems:\n\t\t\t\tbreak;\n\t\t\tcase viewOptions.myWords:\n\t\t\t\tbreak;\n\t\t\tcase viewOptions.help:\n\t\t\t\tbreak;\n\t\t\tcase viewOptions.selfDestruct:\n\t\t\t\tbreak;\n\t\t\tdefault: \n\t\t\t\treturn;\n\n\t\t}\n\t}\n\n\n\n\trender() {\t\n\n\t\tlet startButtonText = \"Build!\";\n\n\t\t\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\n\t\t\t{this.state.activeView ? \n\n\t\t\t\t<>\n\t\t\t\t <NavBar \n\t\t\t\t \tbuttonNames={this.state.viewNames} handleClick={this.toggleView}\n\t\t\t\t \thandleMouseover={this.handleMouseoverHistory}\n\t\t\t\t \thandleMouseout={this.handleMouseoutHistory}\n\t\t\t\t />\n\t\t\t\t {this.renderSwitch(this.state.activeView)}\n\t\t\t\t</>\n\t\t\t\t:\n\t\t\t\t<Button buttonStyle=\"startButton\" handleClick={this.handleCreateNewPoem} value={startButtonText} displayHistory={this.state.displayHistory}/>\n\t\t\t}\n\t\t\t</>\n\t\t);\n\t}\n\t\t\t\n};\n\nexport default Game; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './components/Game';\n\n// ========================================\n\n\nReactDOM.render(\n\n<Game />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}